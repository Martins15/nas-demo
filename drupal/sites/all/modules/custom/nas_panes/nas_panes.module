<?php

/**
 * @file
 * Maintains panel panes.
 */

define('NAS_PANES_BIRD_GUIDE_PAGE_MANAGER_CACHE_KEY', 'page-bird_guide');
define('NAS_PANES_BIRD_LANDING_PAGE_MANAGER_CACHE_KEY', 'page-birds_landing');
define('NAS_PANES_NEWS_PAGE_MANAGER_CACHE_KEY', 'page-news');
define('NAS_PANES_NODE_VIEW_PAGE_MANAGER_CACHE_KEY', 'node_view');

define('NAS_FEATURED_BIRD_IMAGE_STYLE', 'featured_bird');
define('NAS_FEATURED_BIRD_IMAGE_STYLE_MOBILE', 'featured_bird_mobile');
define('NAS_FEATURED_ILLUSTRATION_IMAGE_STYLE', 'featured_bird_illustration');

/**
 * Implements hook_ctools_plugin_directory().
 */
function nas_panes_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implements hook_theme().
 */
function nas_panes_theme() {
  return array(
    'nas_featured_bird' => array(
      'variables' => array(
        'name' => '',
        'scientific_name' => '',
        'url' => '',
        'image_path' => '',
        'image_path_mobile' => '',
        'image_string' => '',
        'illustration_path' => '',
        'contextual_links' => '',
      ),
      'template' => 'nas-featured-bird',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/featured_bird'
    ),
    'nas_bird_landing_featured' => array(
      'variables' => array(
        'name' => '',
        'url' => '',
        'image_path' => '',
        'image_path_mobile' => '',
        'summary' => '',
        'bird_guide_link' => '',
        'category' => '',
        'color' => '',
        'category_link' => '',
        'category_link_more' => '',
        'contextual_links' => '',
      ),
      'template' => 'bird-landing-featured',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/bird_landing_featured'
    ),
    'nas_in_the_news' => array(
      'variables' => array(
        'teasers' => NULL,
        'title' => '',
      ),
      'template' => 'nas-in-the-news',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/in_the_news'
    ),
    'nas_featured_social_in_article' => array(
      'variables' => array(
        'title' => '',
        'page_link' => '',
      ),
      'template' => 'nas-featured-social-in-article',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/block_in_article'
    ),
    'nas_panes_social_news_block' => array(
      'variables' => array(
        'title' => '',
        'page_link' => '',
        'caption' => '',
      ),
      'template' => 'nas-panes-social-news-block',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/news_social_block'
    ),
    'nas_panes_press_contact' => array(
      'variables' => array(
        'title' => '',
        'contacts' => array(),
      ),
      'template' => 'nas-panes-press-contact',
      'path' => drupal_get_path('module', 'nas_panes') . '/plugins/content_types/press_contact'
    ),
  );
}

/**
 * Implements hook_ajax_render_alter().
 */
function nas_panes_ajax_render_alter(&$commands) {

  $copy_commands = $commands;
  $last_command = array_pop($copy_commands);
  // Will get triggered when user submitted the form.
  if (strpos($_GET['q'], '/form') !== FALSE && $last_command['command'] == 'modal_dismiss') {
    // Here we save the cache to database. When we edited the pane we made
    // changes in the cache. In order the page to see the changes we need
    // to save cache data to database.
    if (strpos($_GET['q'], NAS_PANES_BIRD_GUIDE_PAGE_MANAGER_CACHE_KEY) !== FALSE) {
      nas_panes_save_bird_guide_pane();
    }

    if (strpos($_GET['q'], NAS_PANES_BIRD_LANDING_PAGE_MANAGER_CACHE_KEY) !== FALSE) {
      nas_panes_save_bird_landing_page();
    }

    if (strpos($_GET['q'], NAS_PANES_NEWS_PAGE_MANAGER_CACHE_KEY) !== FALSE) {
      nas_panes_save_news_page();
    }

    if (strpos($_GET['q'], NAS_PANES_NODE_VIEW_PAGE_MANAGER_CACHE_KEY) !== FALSE) {
      nas_panes_save_node_view_page();
    }

    $commands[] = ctools_ajax_command_reload();
  }
}

/**
 * Resave bird guide page (cache to database).
 */
function nas_panes_save_bird_guide_pane() {
  $cache = page_manager_get_page_cache(NAS_PANES_BIRD_GUIDE_PAGE_MANAGER_CACHE_KEY);
  page_manager_save_page_cache($cache);
}

/**
 * Resave bird landing page (cache to database).
 */
function nas_panes_save_bird_landing_page() {
  $cache = page_manager_get_page_cache(NAS_PANES_BIRD_LANDING_PAGE_MANAGER_CACHE_KEY);
  page_manager_save_page_cache($cache);
}

/**
 * Resave news page (cache to database).
 */
function nas_panes_save_news_page() {
  $cache = page_manager_get_page_cache(NAS_PANES_NEWS_PAGE_MANAGER_CACHE_KEY);
  page_manager_save_page_cache($cache);
}

/**
 * Resave bird node view page (cache to database).
 */
function nas_panes_save_node_view_page() {
  $cache = page_manager_get_page_cache(NAS_PANES_NODE_VIEW_PAGE_MANAGER_CACHE_KEY);
  $cache->changes = array(
    'handlers' => TRUE,
    'handlers/node_view_panel_context' => TRUE,
    'handlers/node_view_panel_context/content' => TRUE,
  );
  $cache->changed = TRUE;
  $cache->handler_info['node_view_panel_context']['changed'] = 2;

  page_manager_save_page_cache($cache);
}

/**
 * Implements hook_ctools_plugin_post_alter().
 *
 * Remove "Edit Panel" contextual link form all panels pages.
 */
function nas_panes_ctools_plugin_post_alter(&$plugin, &$info) {
  if ($info['type'] == 'task_handlers') {
    $plugin['contextual link'] = 'return';
  }
}

/**
 * Get blue text link of the node (article).
 */
function nas_panes_get_blue_text_link($node) {
  $custom_section_item = field_get_items('node', $node, 'field_custom_section');
  if (!empty($custom_section_item)) {
    $term = taxonomy_term_load($custom_section_item[0]['tid']);
    return array(check_plain($term->name), url('<front>'));
  }

  $menu_section_item = field_get_items('node', $node, 'field_menu_section');
  if (!empty($menu_section_item)) {
    // Default is the first term.
    $term = taxonomy_term_load($menu_section_item[0]['tid']);

    $term_tids = array();
    foreach ($menu_section_item as $item) {
      $term_tids[] = $item['tid'];
    }
    $terms = taxonomy_term_load_multiple($term_tids);
    $term_name_keyed = array();
    foreach ($terms as $term) {
      $term_name_keyed[$term->name] = $term;
    }
    $term_names = array_keys($term_name_keyed);

    $trail = menu_get_active_trail();
    $trail = array_reverse($trail);
    foreach ($trail as $menu_item) {
      if (in_array($menu_item['title'], $term_names)) {
        $term = $term_name_keyed[$menu_item['title']];
        break;
      }
    }
    return array(check_plain($term->name), url('<front>'));
  }
  return array(NULL, NULL);
}
