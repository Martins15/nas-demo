<?php

/**
 * @file
 * Maintains an entity that appears as panel pane content.
 */

// Load nas_fpp.content.inc.
module_load_include('inc', 'nas_fpp', 'nas_fpp.content');

/**
 * Implements hook_menu().
 */
function nas_fpp_menu() {
  $items['ajax/get/fpp/%'] = array(
    'page callback' => 'nas_fpp_ajax_get_fpp_callback',
    'page arguments' => array(3),
    'access callback' => TRUE,
    'delivery callback' => 'ajax_deliver',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_entity_info_alter()
 */
function nas_fpp_entity_info_alter(&$entity_info) {
  $entity_info['fieldable_panels_pane']['bundles']['nas_editorial_cards'] = array(
    'label' => t('Editorial cards'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_editorial_cards',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['fieldable_panels_pane']['bundles']['nas_featured_content_cards'] = array(
    'label' => t('Featured content cards'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_featured_content_cards',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['fieldable_panels_pane']['bundles']['nas_fpp_bird_guide'] = array(
    'label' => t('The Audubon Bird Guide'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_fpp_bird_guide',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['fieldable_panels_pane']['bundles']['nas_fpp_flyway_hero'] = array(
    'label' => t('Flyway Hero'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_fpp_flyway_hero',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['fieldable_panels_pane']['bundles']['nas_fpp_flyway_nav'] = array(
    'label' => t('Flyway Navigation Menu'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_fpp_flyway_nav',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['fieldable_panels_pane']['bundles']['nas_flyway_section'] = array(
    'label' => t('Flyway section'),
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/nas_flyway_section',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
  $entity_info['node']['view modes']['nas_node_teaser_small'] = array(
    'label' => t('Teaser small'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['nas_node_teaser_wo_date'] = array(
    'label' => t('Teaser without date'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['nas_node_teaser_no_section_link'] = array(
    'label' => t('Teaser without section link'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['nas_node_featured'] = array(
    'label' => t('Featured'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['nas_node_featured_small'] = array(
    'label' => t('Featured Small'),
    'custom settings' => TRUE,
  );
  $entity_info['node']['view modes']['nas_node_teaser'] = array(
    'label' => t('Teaser small (2)'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['hero'] = array(
    'label' => t('Hero'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['hero_mobile'] = array(
    'label' => t('Hero mobile'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['default_teaser_image'] = array(
    'label' => t('Default teaser image'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['bird_illustration'] = array(
    'label' => t('Bird illustration'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['bird_teaser_illustration'] = array(
    'label' => t('Bird teaser illustration'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['hero_cover_bird_page'] = array(
    'label' => t('Hero cover bird page'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['article_teaser'] = array(
    'label' => t('Article teaser'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['article_featured'] = array(
    'label' => t('Article featured'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['nas_wysiwyg_image'] = array(
    'label' => t('Wysiwyg image'),
    'custom settings' => TRUE,
  );
  $entity_info['file']['view modes']['nas_file_plain_text_fields'] = array(
    'label' => t('File caption and file creditds text'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_preprocess_fieldable_panels_pane().
 */
function nas_fpp_preprocess_fieldable_panels_pane(&$vars) {
  $function = 'nas_fpp_preprocess_fieldable_panels_pane_' . $vars['elements']['#bundle'];
  if (function_exists($function)) {
    $function($vars);
  }
}

/**
 * Preprocess function for nas_editorial_cards FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_editorial_cards(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];
  // Preprocess section for nas_editorial_cards FPP.
  $get_field_column_count = field_get_items('fieldable_panels_pane', $fpp, 'field_column_count');
  $vars['classes_array'][] = 'large-' . $get_field_column_count[0]['value'];
  $vars['editorial_card_photo'] = field_view_field('fieldable_panels_pane', $fpp, 'field_image', array('label' => 'hidden'));
  $get_field_link = field_get_items('fieldable_panels_pane', $fpp, 'field_link');
  $vars['editorial_card_slug'] = l($get_field_link[0]['title'], $get_field_link[0]['url'], array('attributes' => array('class' => array('editorial-card-slug'))));
  $vars['editorial_card_title'] = l($fpp->title, $get_field_link[0]['url'], array('attributes' => array('class' => array('editorial-card-title'))));
  $get_field_links = field_get_items('fieldable_panels_pane', $fpp, 'field_links');
  foreach ($get_field_links as $link) {
    $vars['editorial_card_links'][] = l($link['title'], $link['url'], array('attributes' => array('class' => array('editorial-card-link'))));
  }
  $vars['editorial_card_summary'] = field_view_field('fieldable_panels_pane', $fpp, 'field_summary', array('label' => 'hidden'));

  $vars['contextual_links'] = '';
  if (!user_access('edit fieldable nas_editorial_cards')) {
    return;
  }

  $panel_id = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();

  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panel_context:page-birds_landing::page_birds_landing_panel_context::::/' . $panel_id,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * Preprocess function for nas_featured_content_cards FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_featured_content_cards(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];
  $get_field_image = field_get_items('fieldable_panels_pane', $fpp, 'field_image');
  $vars['banner_image'] = '';
  if (isset($get_field_image[0]['uri'])) {
    $vars['banner_image'] = file_create_url($get_field_image[0]['uri']);
    // To Do: Add mobile images presets support.
    $url = file_create_url($get_field_image[0]['uri']);
    $vars['banner_mobile_image'] = image_style_url('nas_birds_landing_epsacrop_mobile', $get_field_image[0]['uri']);
  }

  $get_field_link = field_get_items('fieldable_panels_pane', $fpp, 'field_link');
  $vars['banner_slug'] = l($get_field_link[0]['title'], $get_field_link[0]['url'], array('attributes' => array('class' => array('banner-slug'))));
  $vars['banner_title'] = $fpp->title;
  $get_field_links = field_get_items('fieldable_panels_pane', $fpp, 'field_links');
  foreach ($get_field_links as $link) {
    $items[] = l($link['title'], $link['url']);
  }
  $vars['banner_links'] = theme('item_list', array(
    'items' => $items,
    'attributes' => array(
      'class' => array(
        'banner-links',
        'inline-list'
      ),
    ),
  ));
  $get_field_summary = field_get_items('fieldable_panels_pane', $fpp, 'field_summary');
  $vars['banner_summary'] = strip_tags($get_field_summary[0]['value']);
  $get_field_color_mode = field_get_items('fieldable_panels_pane', $fpp, 'field_color_mode');
  $vars['color_mode'] = $get_field_color_mode[0]['value'];

  $vars['contextual_links'] = '';
  if (!user_access('edit fieldable nas_featured_content_cards')) {
    return;
  }

  $panel_id = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();

  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panel_context:page-birds_landing::page_birds_landing_panel_context::::/' . $panel_id,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * Preprocess function for nas_fpp_bird_guide FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_fpp_bird_guide(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];
  $vars['title'] = $fpp->title;
  $vars['links'] = theme('item_list', array(
    'items' => array(
      l(t('Explore Our Bird Guide'), ''),
      l(t('Adopt a Bird'), '', array('attributes' => array('class' => array('cta')))),
    ),
    'attributes' => array(
      'class' => array(
        'section-nav',
        'inline-list',
        )
      ),
  ));
  $get_field_related_bird = field_get_items('fieldable_panels_pane', $fpp, 'field_related_bird');
  if (count($get_field_related_bird) !== 4) {
    $vars['fields'] = views_embed_view('nas_similar_birds', 'audubon_bird_guide_random');
  }

  $vars['contextual_links'] = '';
  if (!user_access('fpp bird guide pane edit')) {
    return;
  }

  $panel_id = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();

  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panel_context:page-birds_landing::page_birds_landing_panel_context::::/' . $panel_id,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * Preprocess function for nas_editorial_cards FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_fpp_flyway_hero(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];
  $vars['title'] = $fpp->title;
  $vars['links'] = theme('item_list', array(
    'items' => array(
      l(t('Explore Our Bird Guide'), ''),
      l(t('Adopt a Bird'), '', array('attributes' => array('class' => array('cta')))),
    ),
    'attributes' => array(
      'class' => array(
        'section-nav',
        'inline-list',
      )
    ),
  ));

  $vars['flyway_hero_items'] = array();
  $delta = 1;
  if ($hero_items = field_get_items('fieldable_panels_pane', $fpp, 'field_flyway_hero_items')) {
    foreach ($hero_items as $hero_item) {
      $fc = field_collection_item_load($hero_item['value']);
      $bird = $fc->field_flyway_bird[LANGUAGE_NONE][0]['entity'];
      $vars['flyway_hero_items'][$delta] = array(
        'bird_url' => url('node/' . $bird->nid),
        'bird_title' => check_plain($bird->title),
        'map_coordinates' => $fc->field_map_coordinates[LANGUAGE_NONE][0]['safe_value'],
        'background' => file_create_url($fc->field_background_image[LANGUAGE_NONE][0]['uri']),
        'description' => $fc->field_description[LANGUAGE_NONE][0]['safe_value'],
      );
      $delta++;
    }
  }

  $vars['minimap'] = file_create_url($fpp->field_flyway_minimap[LANGUAGE_NONE][0]['uri']);

  $vars['title'] = '';
  $node = menu_get_object();
  if ($node && isset($node->title)) {
    $vars['title'] = check_plain($node->title);
  }

  $vars['blue_text_link'] = '';
  if ($node && $blue = nas_panes_get_blue_text_link($node)) {
    $vars['blue_text_link'] = l($blue[0], $blue[1], array('classes' => array('hero-slug')));
  };

  $vars['contextual_links'] = '';

  // Early return pattern.
  if (!$node || !user_access('administer site configuration')) {
    return;
  }

  $panel_id = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();

  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panelizer:node:' . $node->nid . ':page_manager/' . $panel_id,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * Preprocess function for nas_editorial_cards FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_fpp_flyway_nav(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];
  $vars['title'] = check_plain($fpp->title);

  $vars['links'] = array();
  if ($field_items = field_get_items('fieldable_panels_pane', $fpp, 'field_flyways')) {
    foreach ($field_items as $field_item) {
      $node = node_load($field_item['target_id']);
      $path = 'node/' . $node->nid;
      $options = array();
      if ($_GET['q'] == $path) {
        $options['attributes'] = array('class' => array('current'));
      }
      $vars['links'][] = l($node->title, $path, $options);
    }
  }

  $vars['contextual_links'] = '';

  // Early return pattern.
  if (!user_access('administer site configuration')) {
    return;
  }

  $panel_id = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();

  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panelizer:default:node:flyway.page_manager:node:flyway:default/' . $panel_id,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * Preprocess function for nas_featured_content_cards FPP.
 */
function nas_fpp_preprocess_fieldable_panels_pane_nas_flyway_section(&$vars) {
  $fpp = $vars['elements']['#fieldable_panels_pane'];

  $get_field_image = field_get_items('fieldable_panels_pane', $fpp, 'field_image');
  $vars['image'] = '';
  if (isset($get_field_image[0]['uri'])) {
    $vars['image'] = theme('image_style', array(
      'style_name' => 'front_flyway_image',
      'path' => $get_field_image[0]['uri'],
    ));
  }
  $get_field_hero_image = field_get_items('fieldable_panels_pane', $fpp, 'field_hero_image');
  $vars['hero_image'] = '';
  if (isset($get_field_hero_image[0]['file']->uri)) {
    $vars['hero_image'] = file_create_url($get_field_hero_image[0]['file']->uri);
  }
  $get_field_flyway = field_get_items('fieldable_panels_pane', $fpp, 'field_flyway');
  $vars['title'] = $get_field_flyway[0]['entity']->title;
  $get_field_flyway_description = field_view_field('fieldable_panels_pane', $fpp, 'field_flyway_description');
  $vars['flyway_description'] = $get_field_flyway_description[0]['#markup'];
  $get_field_flyway_includes = field_view_field('fieldable_panels_pane', $fpp, 'field_flyway_includes');
  $vars['flyway_includes'] = $get_field_flyway_includes[0]['#markup'];
  $get_field_about_the_flyways = field_view_field('fieldable_panels_pane', $fpp, 'field_about_the_flyways');
  $vars['about_the_flyways'] = $get_field_about_the_flyways[0]['#markup'];
  $vars['about_link'] = l(t('About the Flyways'), 'flyways');
  $vars['learn_more'] = l(t('Learn More'), 'flyways', array('attributes' => array('class' => array('editorial-card-link'))));

  $vars['contextual_links'] = '';
  if (!user_access('administer site configuration')) {
    return;
  }

  $pid = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
    ':subtype' => 'uuid:' . $fpp->uuid,
  ))->fetchField();
  if (empty($pid)) {
    $did_frontpage_query = db_query(
      'SELECT did FROM {panels_display} WHERE layout LIKE :layout',
      array(':layout' => 'nas_frontpage')
    )->fetchCol();
    $did_frontpage = $did_frontpage_query[0];
    nas_fpp_create_panels_pane($did_frontpage, 'nas_flyway_section', 'main', 0, $fpp->uuid, 0);
    $pid = db_query('SELECT pid FROM {panels_pane} WHERE subtype = :subtype', array(
      ':subtype' => 'uuid:' . $fpp->uuid,
    ))->fetchField();
  }
  ctools_include('modal');
  ctools_include('ajax');
  ctools_modal_add_js();
  ctools_add_js('ajax-responder');
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'panels/ajax/editor/edit-pane/panel_context:' . NAS_PANES_FRONTPAGE_PAGE_MANAGER_CACHE_KEY . '::page_frontpage2_panel_context::::/' . $pid,
    'html' => TRUE,
    'query' => array('reload' => 'true'),
    'attributes' => array(
      'class' => array('ctools-use-modal'),
      'title' => t('Edit'),
    ),
  );
  $build = array(
    '#prefix' => '<div class="contextual-links-wrapper">',
    '#suffix' => '</div>',
    '#theme' => 'links__contextual',
    '#links' => $links,
    '#attributes' => array('class' => array('contextual-links')),
    '#attached' => array(
      'library' => array(array('contextual', 'contextual-links')),
    ),
  );
  $vars['contextual_links'] = drupal_render($build);
}

/**
 * AJAX callback function for ajax/get/fpp/%.
 */
function nas_fpp_ajax_get_fpp_callback($argument) {
  //We use 2 functions from this plugin.
  include(drupal_get_path('module', 'fieldable_panels_panes') . '/plugins/content_types/fieldable_panels_pane.inc');
  //Select all nas_flyway_section FPPs.
  $query = db_select('fieldable_panels_panes', 'fpp');
  $query->fields('fpp', array('bundle', 'uuid'));
  $query->condition('fpp.bundle', 'nas_flyway_section', '=');
  $result = $query->execute()->fetchAll();

  foreach ($result as $value) {
    $subtype_name = 'uuid:' . $value->uuid;
    $fpp = fieldable_panels_panes_load_entity($subtype_name);
    $get_field_flyway = field_get_items('fieldable_panels_pane', $fpp, 'field_flyway');
    if(!isset($get_field_flyway[0])) {
      continue;
    }    
    $entity = entity_load('node', array($get_field_flyway[0]['target_id']));
    $entity = reset($entity);
    $get_field_flyway_states = field_get_items('node', $entity, 'field_flyway_states');
    $iso_codes = array();
    foreach ($get_field_flyway_states as $tid) {
      $term = taxonomy_term_load($tid['tid']);
      $get_field_iso_code = field_get_items('taxonomy_term', $term, 'field_iso_code');
      if (isset($get_field_iso_code[0])) {
        $iso_codes[] = $get_field_iso_code[0]['value'];
      }
    }
    //Finally check which FPP we have to output based on geolocation.
    if (in_array($argument, $iso_codes) && FALSE) {
      $html = drupal_render(fieldable_panels_panes_view($fpp, 'full'));
    }
  }
  if (!isset($html)) {
    //Geolocation does not return any data or user is out of the any flyway state
    //so load random nas_flyway_section FPP.
    $subtype_name = 'uuid:' . $result[array_rand($result)]->uuid;
    $fpp_rand = fieldable_panels_panes_load_entity($subtype_name);
    $html = drupal_render(fieldable_panels_panes_view($fpp_rand, 'full'));
  }

  $ajax_result = array('#type' => 'ajax');
  $ajax_result['#commands'][] = ajax_command_insert('#flyway-section', $html);

  return $ajax_result;
}
