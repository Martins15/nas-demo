<?php

/**
 * @file
 * For hook_update_X functions.
 */

function nas_master_install() {
  $files = array('footer-logo.png', 'canon-logo.png');
  foreach ($files as $file) {
    $source = DRUPAL_ROOT . '/sites/all/themes/custom/nas/img/' . $file;
    $destination = 'public://' . $file;
    file_unmanaged_copy($source, $destination, FILE_EXISTS_REPLACE);
  }
}

/**
 * Enable nas_slideshow_feature feature.
 */
function nas_master_update_7002() {
  module_enable(array('nas_slideshow_feature'));
}

/**
 * Revert nas_flyways_feature & nas_frontpage_feature features.
 */
function nas_master_update_7005() {
  features_revert_module('nas_flyways_feature');
  features_revert_module('nas_frontpage_feature');
}

/**
 * Changes db for activate nas_past_magazine_issues feature.
 */
function nas_master_update_7008() {
  // Revert nas_magazine_issue_feature.
  features_revert(array('nas_magazine_issue_feature' => array('field_instance')));

  // Enable nas_past_magazine_issues module.
  if (!module_exists('nas_past_magazine_issues')) {
    $modules = array('nas_past_magazine_issues');
    module_enable($modules);
  }
}

/**
 * Revert Article CT feature.
 * Revert NAS Flyways Landing feature.
 */
function nas_master_update_7009() {
  features_revert_module('nas_article_feature');
  features_revert_module('nas_flyways_landing_feature');
}

/**
 * Enable Conservation Strategy and Conservation Project features.
 */
function nas_master_update_7013() {
  module_enable(array('nas_conservation_strategy_feature', 'nas_conservation_project_feature'));
}

/**
 * Revert NAS Site Template feature.
 */
function nas_master_update_7014() {
  features_revert_module('nas_site_template_feature');
}

/**
 * Activate BOA CT feature with dependensie.
 */
function nas_master_update_7015() {

  module_enable(array('book'));

  // Delete default book content type.
  node_type_delete('book');
  variable_del('node_preview_book');

  if (!module_exists('nas_boa_feature')) {
    module_enable(array('nas_boa_feature'));
    features_revert_module('nas_boa_feature');
  }
}

/**
 * Revert NAS Views feature.
 * Insert Flyway Conservation Projects pane in panelized overriden flyway nodes.
 */
function nas_master_update_7016() {
  features_revert_module('nas_views');

  $nids = db_query("SELECT nid FROM {node} WHERE type = :type", array(':type' => 'flyway'))->fetchAllKeyed(0, 0);
  $nodes = node_load_multiple($nids);
  foreach ($nodes as $node) {
    $did = $node->panelizer['page_manager']->did;
    // In hook_update_N we use db_insert() instead of drupal_write_record().
    db_insert('panels_pane')
      ->fields(array(
        'did' => $did,
        'panel' => 'bottom',
        'type' => 'nas_panes_flyway_cons_projects',
        'subtype' => 'nas_panes_flyway_cons_projects',
        'shown' => 1,
        'access' => serialize(array()),
        'configuration' => serialize(array()),
        'cache' => serialize(array()),
        'style' => serialize(array('settings' => NULL)),
        'css' => serialize(array()),
        'extras' => serialize(array()),
        'position' => 2,
        'locks' => serialize(array()),
      ))
      ->execute();
  }
}

/**
 * Revert BOA CT feature.
 */
function nas_master_update_7017() {
  features_revert_module('nas_boa_feature');
}

/**
 * Revert NAS Image Styles feature.
 * Revert Conservation Project feature.
 */
function nas_master_update_7018() {
  features_revert_module('nas_image_styles_feature');
  features_revert_module('nas_conservation_project_feature');
}

/**
 * Revert features for Slideshow migration.
 */
function nas_master_update_7019() {
  $features = array(
    'nas_bird_type_feature',
    'nas_image_styles_feature',
    'nas_slideshow_feature',
    'nas_import_feeds_feature',
  );
  foreach ($features as $feature) {
    features_revert_module($feature);
  }
}

/**
 * Slideshow migration.
 */
function nas_master_update_7020(&$sandbox) {
  $chunk = 10;
  if (!isset($sandbox['progress'])) {
    // Add nids to sandbox.
    $result = drupal_http_request(EXPORT_NODE_LIST_NIDS_URL . 'media_gallery');
    $sandbox['gallery_nids'] = drupal_json_decode($result->data);

    // Limit nodes for dev environment.
    if (isset($_SERVER['APP_ENV']) && $_SERVER['APP_ENV'] == 'dev') {
      $sandbox['gallery_nids'] = array_slice($sandbox['gallery_nids'], 0, 20);
    }

    $sandbox['max'] = count($sandbox['gallery_nids']);
    $sandbox['progress'] = 0;
  }

  if (!empty($sandbox['max'])) {
    // Get part of ids.
    $nids = array_slice($sandbox['gallery_nids'], $sandbox['progress'], $chunk);
    pp_import_nodes_batch($nids, 'media_gallery_import');
    $sandbox['progress'] += count($nids);
  }

  $sandbox['#finished'] = empty($sandbox['max']) ? 1 : $sandbox['progress'] / $sandbox['max'];

  if ($sandbox['#finished'] >= 1) {
    $sandbox['#finished'] = 1;
    watchdog('nas_master', '@count media galleries has been successfully imported.', array('@count' => $sandbox['progress']));

    return t('The migration was successful.');
  }
}

/**
 * Revert features for Slideshow.
 */
function nas_master_update_7021() {
  features_revert_module('nas_image_styles_feature');
  features_revert_module('nas_slideshow_feature');
}

/**
 * Revert Conservation Project feature.
 */
function nas_master_update_7023() {
  features_revert_module('nas_conservation_project_feature');
}

/**
 * Revert nas_image_styles_feature feature.
 */
function nas_master_update_7024() {
  features_revert_module('nas_image_styles_feature');
}

/**
 * Revert features for "Related Features" block.
 */
function nas_master_update_7025() {
  features_revert_module('nas_view_modes_feature');
  features_revert_module('nas_article_feature');
  features_revert_module('nas_image_styles_feature');
  features_revert_module('nas_slideshow_feature');
}

/**
 * Enable Static page feature.
 */
function nas_master_update_7026() {
  module_enable(array('nas_static_page_feature'));
}

/**
 * Revert features for Magazine Issue page blocks.
 */
function nas_master_update_7027() {
  features_revert_module('nas_article_feature');
  features_revert_module('nas_views_feature');
  features_revert_module('nas_magazine_issue_feature');
}

/**
 * Create BOA nodes.
 */
function nas_master_update_7028() {
  module_disable(array('book'));
  variable_del('book_allowed_types');
  variable_del('book_child_type');

  $menu = array(
    'menu_name' => 'boa',
    'title' => t('Birds of America'),
    'description' => t('Menu holds structure of Birds of America book'),
  );
  menu_save($menu);

  $structure_file = file_get_contents(drupal_get_path('module', 'nas_master') . '/resources/boa_structure.txt');
  $weight = 0;
  $family_mlid = NULL;
  $genus_mlid= NULL;
  foreach (explode("\n", $structure_file) as $structure_file_row) {
    $weight++;
    list($title, $link) = explode(':', $structure_file_row);
    $type = _nas_master_update_7027_get_type($link);

    $node = (object) array(
      'type' => $type,
      'title' => $title,
      'created' => REQUEST_TIME,
      'uid' => 2,
      'author' => 'editor',
      'language' => LANGUAGE_NONE,
    );
    node_object_prepare($node);
    node_save($node);

    switch ($type) {
      case 'boaf':
        // Create top level menu item.
        $menu_link = array(
          'link_title' => $node->title,
          'link_path' => 'node/' . $node->nid,
          'module' => 'nas_master',
          'menu_name' => 'boa',
          'weight' => $weight,
        );
        $family_mlid = menu_link_save($menu_link);
        break;

      case 'boag':
        // Create menu item under family.
        $menu_link = array(
          'link_title' => $node->title,
          'link_path' => 'node/' . $node->nid,
          'module' => 'nas_master',
          'menu_name' => 'boa',
          'weight' => $weight,
          'plid' => $family_mlid,
        );
        $genus_mlid = menu_link_save($menu_link);
        break;

      case 'boa':
        // Create menu item under genus.
        $menu_link = array(
          'link_title' => $node->title,
          'link_path' => 'node/' . $node->nid,
          'module' => 'nas_master',
          'menu_name' => 'boa',
          'weight' => $weight,
          'plid' => $genus_mlid,
        );
        menu_link_save($menu_link);
        break;
    }

    unset($node);
  }

}

function _nas_master_update_7027_get_type($link) {
  if (preg_match('/F[0-9]*$/', $link)) {
    return 'boaf';
  }
  if (preg_match('/F[0-9]*_G[0-9]*$/', $link)) {
    return 'boag';
  }
  return 'boa';
}

/**
 * Delete instance of field_related_bird from Conservation Project CT.
 * Revert features for Conservation projects "Birds native to this area" pane.
 */
function nas_master_update_7029() {
  if ($instance = field_info_instance('node', 'field_related_bird', 'project')) {
    field_delete_instance($instance);
  }
  features_revert_module('nas_conservation_project_feature');
  features_revert_module('nas_views_feature');
}

/**
 * Revert nas_image_styles_feature feature.
 */
function nas_master_update_7030() {
  features_revert_module('nas_image_styles_feature');
}

/**
 * Revert nas_bird_type_feature feature to update image file entity view mode
 * settings.
 */
function nas_master_update_7031() {
  features_revert_module('nas_bird_type_feature');
}

/**
 * Revert features for Conservation project Related news block.
 */
function nas_master_update_7032() {
  features_revert_module('nas_article_feature');
  features_revert_module('nas_conservation_project_feature');
  features_revert_module('nas_views');
}

/**
 * Revert features for Conservation project's 'Explore More Conservation
 * Projects' block.
 */
function nas_master_update_7033() {
  features_revert_module('nas_views');
  features_revert_module('nas_conservation_project_feature');
  features_revert_module('nas_editor_role');
}

/**
 * Add new wysiwyg inline element Bottom line.
 */
function nas_master_update_7034() {
  field_delete_field('field_project_bottomline');
  features_revert_module('nas_bird_type_feature');
  features_revert_module('nas_conservation_project_feature');
}

/**
 * Upload image for Conservation landing page. Enable nas_conservation_landing_feature feature.
 */
function nas_master_update_7036() {
  pp_create_conservation_hero_image();
  module_enable(array('nas_conservation_landing_feature'));
}

/**
 * Revert nas_static_page_feature feature.
 */
function nas_master_update_7037() {
  features_revert_module('nas_static_page_feature');
}


/**
 * Revert nas_conservation_project_feature feature.
 * Revert nas_bird_type_feature feature.
 */
function nas_master_update_7038() {
  features_revert_module('nas_conservation_project_feature');
  features_revert_module('nas_bird_type_feature');
}

/**
 * Revert nas_conservation_landing_feature feature.
 */
function nas_master_update_7039() {
  features_revert_module('nas_conservation_landing_feature');
}

/**
 * Revert nas_boa_family_feature feature.
 * Revert nas_bird_type_feature feature.
 */
function nas_master_update_7040() {
  features_revert_module('nas_boa_family_feature');
}
