---
# This script contains commands to fill out Drupal settings after installation.
- name: Getting name for settings (WINDOWS)
  set_fact: platform_settings_file={{ tmp_folder }}/reinstall_settings.php
  when: is_windows

- name: Getting name for settings (UNIX)
  set_fact: platform_settings_file={{ settings_file_path }}
  when: is_windows == false

- name: Remove settings.php
  file: name={{ platform_settings_file }} state=absent
  sudo: yes

- name: Creating settings.php
  sudo: yes
  shell: "cp {{ settings_default_file_path }} {{ platform_settings_file }}"

- name: Adding $databases variable to settings.php
  lineinfile:
    dest: "{{ platform_settings_file }}"
    line: "$databases = [
      'default' => [
        'default' => [
          'database' => '{{ mysql_db }}',
          'username' => '{{ mysql_user }}',
          'password' => '{{ mysql_pass }}',
          'driver' => '{{ mysql_driver | default('mysql') }}',
          'prefix' => '{{ mysql_prefix | default }}',
          'port' => {{ mysql_port | default(3306) }},
          'host' => '{{ mysql_host }}',
        ],
      ],
    ];"
  when: not docker_sql

- name: Adding database variable to settings.php
  sudo: yes
  lineinfile:
    dest: "{{ platform_settings_file }}"
    line: "$databases = [
      'default' => [
        'default' => [
          'database' => '{{ docker_sql_db }}',
          'username' => '{{ mysql_user }}',
          'password' => '{{ mysql_pass }}',
          'driver' => '{{ mysql_driver | default('mysql') }}',
          'prefix' => '{{ mysql_prefix | default }}',
          'port' => {{ mysql_port | default(3306) }},
          'host' => '{{ docker_sql_host }}',
        ],
      ],
    ];"
  when: docker_sql and existing_container_name is undefined

- name: Adding database variable to settings.php (for "demo")
  sudo: yes
  lineinfile:
    dest: "{{ platform_settings_file }}"
    line: "$databases = [
      'default' => [
        'default' => [
          'database' => '{{ docker_sql_db }}',
          'username' => '{{ mysql_user }}',
          'password' => '{{ mysql_pass }}',
          'driver' => '{{ mysql_driver | default('mysql') }}',
          'prefix' => '{{ mysql_prefix | default }}',
          'port' => {{ mysql_port | default(3306) }},
          'host' => '{{ docker_demo_sql_host }}',
        ],
      ],
    ];"
  when: docker_sql and existing_container_name is defined and existing_container_name == "demo"

- name: Adding trusted host patterns to settings.php
  lineinfile:
    dest: "{{ platform_settings_file }}"
    line: "$settings['trusted_host_patterns'] = ['{{ (global_env.trusted_host_patterns + env.trusted_host_patterns) | join(\"', '\") }}'];"
  when: global_env.trusted_host_patterns | length or env.trusted_host_patterns | length

- name: Add general pre-settings to settings.php
  lineinfile: dest='{{ platform_settings_file }}' line='{{ item.name }} = \"{{ item.value }}\";'
  when: item.status == true
  with_items: global_env.pre_settings

- name: Add environment specific pre-settings
  lineinfile: dest='{{ platform_settings_file }}' line='{{ item.name }} = \"{{ item.value }}\";'
  when: item.status == true
  with_items: env.pre_settings

- name: Copy settings back (WINDOWS)
  shell: cp {{ platform_settings_file }} {{ settings_file_path }}
  when: is_windows
