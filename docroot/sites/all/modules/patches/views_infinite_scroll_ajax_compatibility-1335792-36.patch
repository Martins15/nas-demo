diff --git a/LICENSE.txt b/LICENSE.txt
old mode 100644
new mode 100755
diff --git a/css/views_infinite_scroll.css b/css/views_infinite_scroll.css
old mode 100644
new mode 100755
diff --git a/drush/views_infinite_scroll.drush.inc b/drush/views_infinite_scroll.drush.inc
old mode 100644
new mode 100755
index ccaa75e..89689d8
--- a/drush/views_infinite_scroll.drush.inc
+++ b/drush/views_infinite_scroll.drush.inc
@@ -75,10 +75,10 @@ function views_infinite_scroll_drush_autopager_download() {
   }
   drush_op('chdir', $path);
   // Download the plugin.
-  if (drush_shell_exec('wget http://jquery-autopager.googlecode.com/files/jquery.autopager-1.0.0.js')) {
-    drush_log(dt('jquery.autopager-1.0.0.js has been downloaded to @path', array('@path' => $path)), 'success');
+  if (drush_shell_exec('wget https://raw.github.com/cristinawithout/jquery-autopager-too/master/jquery.autopager-too.js')) {
+    drush_log(dt('jquery.autopager-too.js has been downloaded to @path', array('@path' => $path)), 'success');
   }
   else {
-    drush_log(dt('Drush was unable to download jquery.autopager-1.0.0.js to @path', array('@path' => $path)), 'error');
+    drush_log(dt('Drush was unable to download jquery.autopager-too.js to @path', array('@path' => $path)), 'error');
   }
 }
diff --git a/images/ajax-loader.gif b/images/ajax-loader.gif
old mode 100644
new mode 100755
diff --git a/js/views_infinite_scroll.js b/js/views_infinite_scroll.js
old mode 100644
new mode 100755
index b1d1465..7f3e9c3
--- a/js/views_infinite_scroll.js
+++ b/js/views_infinite_scroll.js
@@ -1,77 +1,87 @@
 // $Id:
 
 (function ($) {
-var views_infinite_scroll_was_initialised = false;
-Drupal.behaviors.views_infinite_scroll = {
-  attach:function() {
-    // Make sure that autopager plugin is loaded
-    if($.autopager) {
-      if(!views_infinite_scroll_was_initialised) {
-        views_infinite_scroll_was_initialised = true;
-        // There should not be multiple Infinite Scroll Views on the same page
-        if(Drupal.settings.views_infinite_scroll.length == 1) { 
-          var settings = Drupal.settings.views_infinite_scroll[0];
-          var use_ajax = false;
-          // Make sure that views ajax is disabled
-          if(Drupal.settings.views && Drupal.settings.views.ajaxViews) {
-            $.each(Drupal.settings.views.ajaxViews, function(key, value) {
-              if((value.view_name == settings.view_name) && (value.view_display_id == settings.display)) {
-                use_ajax = true;
-              }
-            });
-          }
-          if(!use_ajax) {
-            var view_selector    = 'div.view-id-' + settings.view_name + '.view-display-id-' + settings.display;
-            var content_selector = view_selector + ' > ' + settings.content_selector;
-            var items_selector   = content_selector + ' ' + settings.items_selector;
-            var pager_selector   = view_selector + ' > div.item-list ' + settings.pager_selector;
-            var next_selector    = view_selector + ' ' + settings.next_selector;
-            var img_location     = view_selector + ' > div.view-content';
-            var img_path         = settings.img_path;
-            var img              = '<div id="views_infinite_scroll-ajax-loader"><img src="' + img_path + '" alt="loading..."/></div>';
-            $(pager_selector).hide();
-            var handle = $.autopager({
-              appendTo: content_selector,
-              content: items_selector,
-              link: next_selector,
-              page: 0,
-              start: function() {
-                $(img_location).after(img);
-              },
-              load: function() {
-                $('div#views_infinite_scroll-ajax-loader').remove();
-                Drupal.attachBehaviors(this);
-              }
-            });
+  
+  Drupal.behaviors.views_infinite_scroll = {
+    attach: function (context, settings) {
+        
+        // Make sure that autopager plugin is loaded.
+      if (!$.autopager) {
+        alert(Drupal.t('Autopager jquery plugin in not loaded.'));
+        return;
+      }
+
+      var settings = settings.views_infinite_scroll[0];
+
+      // Ensure we are refreshing the view component.
+      var view_selector = 'div.view-id-' + settings.view_name + '.view-display-id-' + settings.display;
+      var $view = $(context).is(view_selector) ? $(context) : $(context).find(view_selector);
+      if ($view.length == 0) {
+        return;
+      }
 
-            // Trigger autoload if content height is less than doc height already
-            var prev_content_height = $(content_selector).height();
-            do {
-              var last = $(items_selector).filter(':last');
-              if(last.offset().top + last.height() < $(document).scrollTop() + $(window).height()) {
-                last = $(items_selector).filter(':last');
-                handle.autopager('load');
-              }
-              else {
-                break;
-              }
-            }
-            while ($(content_selector).height() > prev_content_height);
+      // Destroy an existing instance of autopager.
+      $.autopager('destroy');
 
+      var content_selector = view_selector + ' > ' + settings.content_selector;
+      var $items = $view.find(settings.items_selector);
+      var $pager = $view.find('> div.item-list ' + settings.pager_selector);
+      var next_selector = view_selector + ' ' + settings.next_selector;
+     var $next = $(next_selector);
+
+      var $img_location = $view.find('div.view-content');
+      var img_path = settings.img_path;
+      var img = '<div id="views_infinite_scroll-ajax-loader"><img src="' + img_path + '" alt="loading..."/></div>';
+
+      $($pager).hide();
+      $.autopager({
+        appendTo: content_selector,
+        content: content_selector + ' ' + settings.items_selector,
+        link: next_selector,
+        page: 0,
+        autoLoad: !settings.manual_load,
+        start: function () {
+          $img_location.after(img);
+        },
+        load: function (current, next) {
+          $('div#views_infinite_scroll-ajax-loader').remove();
+          Drupal.attachBehaviors(this);
+          // Use >= because of views page numbers begin at 0.
+          if (settings.manual_load && next.page >= settings.pager_max) {
+            $next.hide();
+           }
+         }
+    });
+
+      if (settings.manual_load) {
+        // The pager is hidden. Pop "next" link out so it will be visible.
+        $next.text(settings.text);
+        $next.click(function (e) {
+          e.preventDefault();
+          // do load
+          $.autopager('load');
+        });
+        $($pager).before($next);
+        // Wrap the button to allow for easier styling in the theme
+        $next.wrap('<div id="views_infinite_scroll_button" />');
+      }
+      else {
+        $($pager).hide();
+        // Trigger autoload if content height is less than doc height already
+        var prev_content_height = $(content_selector).height();
+        do {
+          var last = $($items).filter(':last');
+          if (last.offset().top + last.height() < $(document).scrollTop() + $(window).height()) {
+            last = $($items).filter(':last');
+            $.autopager('load');
           }
-          else {  
-            alert(Drupal.t('Views infinite scroll pager is not compatible with Ajax Views. Please disable "Use Ajax" option.'));
+          else {
+            break;
           }
-        }
-        else if(Drupal.settings.views_infinite_scroll.length > 1) {
-          alert(Drupal.t('Views Infinite Scroll module can\'t handle more than one infinite view in the same page.'));
-        }
-      }
-    }
-    else {
-      alert(Drupal.t('Autopager jquery plugin in not loaded.'));
-    }
-  }
-}
+         }
+        while ($(content_selector).height() > prev_content_height);
+       }
+     }
+   };
 
 })(jQuery);
diff --git a/theme/views_infinite_scroll_theme.inc b/theme/views_infinite_scroll_theme.inc
old mode 100644
new mode 100755
index 3193238..b52fe07
--- a/theme/views_infinite_scroll_theme.inc
+++ b/theme/views_infinite_scroll_theme.inc
@@ -12,6 +12,8 @@ function theme_views_infinite_scroll_pager($variables) {
   $content_selector = isset($variables['content_selector']) ? $variables['content_selector'] : 'div.view-content';
   $items_selector = isset($variables['items_selector']) ? $variables['items_selector'] : 'div.view-content .views-row';
   $img_path = $variables['img_path'];
+  $manual_load = isset($variables['manual_load']) ? $variables['manual_load'] : FALSE;
+  $text = isset($variables['text']) ? $variables['text'] : array('default' => 'Show More', 'translatable' => TRUE);
   $parameters = $variables['parameters'];
   $quantity = $variables['quantity'];
 
@@ -80,6 +82,9 @@ function theme_views_infinite_scroll_pager($variables) {
           'content_selector' => $content_selector,
           'items_selector' => $items_selector,
           'img_path' => $img_path,
+          'manual_load' => $manual_load,
+          'text' => t($text),
+          'pager_max' => $pager_max,
         ),
       ),
     );
@@ -88,13 +93,16 @@ function theme_views_infinite_scroll_pager($variables) {
 
     // Add Autopager jQuery plugin
     // If libraries module is installed, check for the plugin in libraries dir.
-    if (module_exists('libraries') && file_exists(libraries_get_path('autopager') .'/jquery.autopager-1.0.0.js')) {
-      drupal_add_js(libraries_get_path('autopager') .'/jquery.autopager-1.0.0.js');
+    // Choose autopager with iPhone bug fix over the regular autopager plugin
+    if (module_exists('libraries') && file_exists(libraries_get_path('autopager') .'/jquery.autopager-too.js')) {
+      drupal_add_js(libraries_get_path('autopager') .'/jquery.autopager-too.js');
+   }
+    else if (module_exists('libraries') && file_exists(libraries_get_path('autopager') .'/jquery.autopager-1.0.0.js')) {
+      drupal_add_js(libraries_get_path('autopager') . '/jquery.autopager-too.js');
     }
     // else, load it from views_infinite_scroll/js dir.
     else {
-      $autopager_module_path = drupal_get_path('module', 'views_infinite_scroll') . '/js/jquery.autopager-1.0.0.js';
-      drupal_add_js($autopager_module_path);
+      drupal_add_js(drupal_get_path('module', 'views_infinite_scroll') . '/js/jquery.autopager-too.js');
     }
 
     drupal_add_js(drupal_get_path('module', 'views_infinite_scroll') . '/js/views_infinite_scroll.js');
diff --git a/views_infinite_scroll.info b/views_infinite_scroll.info
old mode 100644
new mode 100755
index b097381..e9d257a
--- a/views_infinite_scroll.info
+++ b/views_infinite_scroll.info
@@ -11,9 +11,9 @@ files[] = views_plugin_pager_infinite_scroll.inc
 files[] = drush/views_infinite_scroll.drush.inc
 files[] = theme/views_infinite_scroll_theme.inc
 
-; Information added by drupal.org packaging script on 2012-04-23
-version = "7.x-1.1"
+; Information added by drupal.org packaging script on 2013-10-19
+version = "7.x-1.1+0-dev"
 core = "7.x"
 project = "views_infinite_scroll"
-datestamp = "1335182196"
+datestamp = "1382164868"
 
diff --git a/views_infinite_scroll.module b/views_infinite_scroll.module
old mode 100644
new mode 100755
index b79c06c..295512f
--- a/views_infinite_scroll.module
+++ b/views_infinite_scroll.module
@@ -35,3 +35,15 @@ function views_infinite_scroll_theme() {
   );
   return $hooks;
 }
+
+/**
+ * Implements hook_views_ajax_data_alter().
+ */
+function views_infinite_scroll_views_ajax_data_alter(&$commands, $view) {
+  switch ($view->query->pager->plugin_name) {
+    case 'infinite_scroll':
+      // Trigger the views_infinite_scroll_ajax_loaded event.
+      $commands[] = ajax_command_invoke('.view-dom-id-' . $view->dom_id . ':parent', 'trigger', array('views_infinite_scroll_ajax_loaded'));
+      break;
+ }
+}
\ No newline at end of file
diff --git a/views_infinite_scroll.views.inc b/views_infinite_scroll.views.inc
old mode 100644
new mode 100755
diff --git a/views_plugin_pager_infinite_scroll.inc b/views_plugin_pager_infinite_scroll.inc
old mode 100644
new mode 100755
index 0c12eb9..5408fc5
--- a/views_plugin_pager_infinite_scroll.inc
+++ b/views_plugin_pager_infinite_scroll.inc
@@ -9,6 +9,39 @@ class views_plugin_pager_infinite_scroll extends views_plugin_pager_full {
   function init(&$view, &$display, $options = array()) {
     parent::init($view, $display, $options);
   }
+  function option_definition() {
+    $options = parent::option_definition();
+    $options['manual_load'] = array('default' => 0);
+    $options['text'] = array('default' => 'Show More', 'translatable' => TRUE);
+    return $options;
+  }
+
+  /**
+   * Provide the default form for setting options.
+   */
+  function options_form(&$form, &$form_state) {
+    parent::options_form($form, $form_state);
+    $form['manual_load'] = array(
+      '#type' => 'checkbox',
+      '#title' => t('Load subsequent pages manually instead of automatically'),
+      '#description' => t('When checked, use a link to trigger loading of subsequent pages instead of window scroll.'),
+      '#default_value' => $this->options['manual_load'],
+      '#weight' => -10,
+    );
+   $form['text'] = array(
+      '#type' => 'textfield',
+      '#title' => t('Manual load label'),
+      '#required' => FALSE,
+      '#description' => t('Label to use on the manual link.'),
+      '#default_value' => $this->options['text'],
+      '#process' => array('ctools_dependent_process'),
+      '#dependency' => array(
+        'edit-pager-options-manual-load' => array(1),
+      ),
+      '#weight' => -10,
+    );
+  }
+
 
   function summary_title() {
     return "Infinite Scroll";
@@ -48,6 +81,17 @@ class views_plugin_pager_infinite_scroll extends views_plugin_pager_full {
         break;
     }
     $pager_theme = views_theme_functions('views_infinite_scroll_pager', $this->view, $this->display);
-    return theme($pager_theme, array('tags' => $input, 'quantity' => $this->options['items_per_page'], 'view_name' => $this->view->name, 'current_display' => $this->view->current_display, 'content_selector' => $content_selector, 'items_selector' => $items_selector, 'img_path' => $img_path, 'element' => $this->options['id']));
+    return theme($pager_theme, array(
+      'tags' => $input,
+      'quantity' => $this->options['items_per_page'],
+      'view_name' => $this->view->name,
+      'current_display' => $this->view->current_display,
+      'content_selector' => $content_selector,
+      'items_selector' => $items_selector,
+      'img_path' => $img_path,
+      'element' => $this->options['id'],
+      'manual_load' => $this->options['manual_load'],
+      'text' => $this->options['text'],)
+    );
   }
 }
