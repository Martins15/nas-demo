<?php

/**
 * @file
 * Native Plants hook_update_X functions.
 */

/**
 * Update Native Plants Search page feature views.
 */
function nas_master_native_plants_update_7001() {
  features_revert(array(
    'nas_native_plants_search_page_feature' => array('views_view'),
  ));
}

/**
 * Enable Native Plants ZIP code to County FIPS code conversion.
 */
function nas_master_native_plants_update_7002() {
  module_enable(array('nas_native_plants_zipfips_feature'));
}

/**
 * Add states taxonomy to Native Plant CT.
 */
function nas_master_native_plants_update_7003() {
  features_revert(array(
    'nas_native_plant_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
  ));
}

/**
 * Add checkall behavior to NP Tier 1 states checkboxes.
 */
function nas_master_native_plants_update_7004() {
  module_enable(array('checkall'));
  features_revert(array(
    'nas_native_plant_ct_feature' => array('field_instance'),
  ));
}

/**
 * Set default ZIP to FIPS variable state.
 */
function nas_master_native_plants_update_7005() {
  variable_set('nas_master_native_plants_zip_fips', 1);
}

/**
 * Update for Native Plants 2.0.
 */
function nas_master_native_plants_update_7006() {
  features_revert(array(
    'nas_solr_feature' => array(
      'search_api_index',
    ),
    'nas_site_template_feature' => array(
      'page_manager_handlers',
    ),
    'nas_native_plants_search_page_feature' => array(
      'page_manager_pages',
      'views_view',
    ),
    'nas_nursery_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
    'nas_community_resource_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
    'nas_nursery_import_feature' => array(
      'feeds_importer',
      'feeds_tamper',
    ),
    'nas_nurseries_near_you_feature' => array(
      'views_view',
    ),
    'nas_native_plants_permalink_page' => array(
      'page_manager_pages',
    ),
  ));
}

/**
 * Restoring default background color of Native Plants bar.
 */
function nas_master_native_plants_update_7007() {
  $panel_type = 'native_plants_bar';
  ctools_include('context');
  ctools_include('plugins');
  $plugin = ctools_get_plugins('ctools', 'content_types', $panel_type);

  $configs = db_select('panels_pane', 'pp')
    ->fields('pp', array('pid', 'configuration'))
    ->condition('pp.type', $panel_type)
    ->execute()
    ->fetchAll();

  foreach ($configs as $config_data) {
    $config = unserialize($config_data->configuration);
    $config['background_color'] = $plugin['defaults']['background_color'];

    db_update('panels_pane')
      ->fields(array('configuration' => serialize($config)))
      ->condition('type', $panel_type)
      ->condition('pid', $config_data->pid)
      ->execute();
  }
}

/**
 * Update community resource services list.
 */
function nas_master_native_plants_update_7008() {
  features_revert(array(
    'nas_community_resource_ct_feature' => array(
      'field_base',
      'field_instance',
    ),
  ));
}

/**
 * Enable external integration module.
 */
function nas_master_native_plants_update_7009() {
  module_enable(array('nas_external_integration'));
}

/**
 * Refresh Native plants tier 1 images.
 */
function nas_master_native_plants_update_7010(&$sandbox) {
  module_load_include('inc', 'nas_master_native_plants', 'nas_master_native_plants.batch');
  $context = array(
    'sandbox' => $sandbox,
  );
  nas_master_native_plants_update_images_callback($context);
  $sandbox = $context['sandbox'];
  $sandbox['#finished'] = ($sandbox['progress'] >= $sandbox['max']) ? TRUE : $context['finished'];

  if ($sandbox['#finished'] === TRUE) {
    watchdog('nas_master_native_plants', '@count native plants nodes have been processed.', array('@count' => $sandbox['progress']));
    return t('The native plants tier 1 images have been successfully refreshed.');
  }
}

/**
 * Set default native plants image credit.
 */
function nas_master_native_plants_update_7011() {
  variable_set('nas_master_native_plants_default_credit', 'Jesse M. Harris');
}

/**
 * Creating Resources vocabulary.
 */
function nas_master_native_plants_update_7012() {
  features_revert(array(
    'nas_native_plants_taxonomy' => array(
      'taxonomy',
      'field_base',
      'field_instance',
    ),
  ));

  $vocab = taxonomy_vocabulary_machine_name_load('native_plant_resources');
  $term_names = array(
    0 => 'Nectar',
    1 => 'Fruit',
    4 => 'Butterflies',
    5 => 'Caterpillars',
  );

  foreach ($term_names as $weight => $name) {
    $old_term = taxonomy_get_term_by_name($name, 'native_plant_attributes');
    $old_term = reset($old_term);

    $new_term = entity_create('taxonomy_term', array(
      'name' => $name,
      'vid' => $vocab->vid,
      'weight' => $weight,
    ));

    $new_term->field_np_attr_machine_attributes = $old_term->field_np_attr_machine_attributes;
    $new_term->field_np_attr_color = $old_term->field_np_attr_color;

    taxonomy_term_save($new_term);
    taxonomy_term_delete($old_term->tid);
  }
}

/**
 * Splitting Nuts/Seeds term in two parts.
 */
function nas_master_native_plants_update_7013() {
  // Splitting Nuts/Seeds terms in two parts.
  $term = taxonomy_get_term_by_name('Nuts/Seeds', 'native_plant_attributes');
  $term = reset($term);
  taxonomy_term_delete($term->tid);

  $vocab = taxonomy_vocabulary_machine_name_load('native_plant_resources');
  $terms_data = array(
    2 => array('name' => 'Nuts', 'color' => '#d3874c'),
    3 => array('name' => 'Seeds', 'color' => '#875834'),
  );

  foreach ($terms_data as $weight => $data) {
    $term = entity_create('taxonomy_term', array(
      'name' => $data['name'],
      'vid' => $vocab->vid,
      'weight' => $weight,
    ));

    $term->field_np_attr_machine_attributes = array(
      LANGUAGE_NONE => array(array('value' => $data['name'])),
    );

    $term->field_np_attr_color = array(
      LANGUAGE_NONE => array(array('rgb' => $data['color'])),
    );

    taxonomy_term_save($term);
  }

  // Updating bird type references to Nuts and Seeds.
  $query = new EntityFieldQuery();
  $results = $query->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'native_plant_bird_types')
    ->fieldCondition('field_np_attr_machine_attributes', 'value', 'NutsSeeds')
    ->execute();

  if (empty($results['taxonomy_term'])) {
    return;
  }

  foreach (taxonomy_term_load_multiple(array_keys($results['taxonomy_term'])) as $term) {
    $values = array();
    foreach (field_get_items('taxonomy_term', $term, 'field_np_attr_machine_attributes') as $value) {
      if ($value['value'] == 'NutsSeeds') {
        $values[] = array('value' => 'Nuts');
        $values[] = array('value' => 'Seeds');
      }
      else {
        $values[] = $value;
      }
    }

    $term->field_np_attr_machine_attributes = array(LANGUAGE_NONE => $values);
    taxonomy_term_save($term);
  }
}

/**
 * Adding Evergreen taxonomy term.
 */
function nas_master_native_plants_update_7014() {
  $vocab = taxonomy_vocabulary_machine_name_load('native_plant_attributes');
  $new_term = entity_create('taxonomy_term', array(
    'name' => 'Evergreen',
    'vid' => $vocab->vid,
    'weight' => 6,
  ));

  $new_term->field_np_attr_machine_attributes = array(
    LANGUAGE_NONE => array(array('value' => 'Evergreen')),
  );

  $new_term->field_np_attr_color = array(
    LANGUAGE_NONE => array(array('rgb' => '#087C2A')),
  );

  taxonomy_term_save($new_term);
}

/**
 * Adding State Office field to Community Resource CT.
 */
function nas_master_native_plants_update_7015() {
  features_revert(array(
    'nas_community_resource_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
    'nas_nursery_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
    'nas_solr_feature' => array(
      'search_api_index',
    ),
    'nas_community_resources_near_you_feature' => array(
      'views_view',
    ),
  ));
}

/**
 * Update Native Plants to use Angular JS.
 */
function nas_master_native_plants_update_7016() {
  features_revert(array(
    'nas_native_plants_image_styles' => array('image'),
    'nas_native_plants_search_page_feature' => array(
      'page_manager_pages',
      'views_view',
    ),
    'nas_nurseries_near_you_feature' => array(
      'views_view'
    ),
  ));
}

/**
 * Enabling Additional Resource CT feature.
 */
function nas_master_native_plants_update_7017() {
  module_enable(array('nas_additional_resource_feature'));
}

/**
 * Add state office Audubon resource to Local Resources tab.
 */
function nas_master_native_plants_update_7018() {
  features_revert(array(
    'nas_community_resources_near_you_feature' => array(
      'views_view',
    ),
    'nas_solr_feature' => array(
      'search_api_index',
    ),
  ));
}

/**
 * Enable Additional resource import feature.
 */
function nas_master_native_plants_update_7019() {
  module_enable(array('nas_additional_resource_import_feature'));
}

/**
 * Enable Additional resource near you feature. Revert feature `nas_native_plants_search_page_feature`.
 */
function nas_master_native_plants_update_7020() {
  module_enable(array('nas_additional_resource_near_you'));
  features_revert(array(
    'nas_native_plants_search_page_feature' => array(
      'page_manager_pages',
    ),
  ));
}

/**
 * Reverting email settings.
 */
function nas_master_native_plants_update_7021() {
  features_revert(array(
    'nas_native_plants_email_feature' => array('variable'),
    'nas_native_plants_permalink_page' => array('page_manager_pages'),
  ));
}

/**
 * Revert feature Community Resource CT.
 */
function nas_master_native_plants_update_7022() {
  features_revert(array(
    'nas_community_resource_ct_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
  ));
}

/**
 * Revert Native Plants features.
 */
function nas_master_native_plants_update_7023() {
  features_revert(array(
    'nas_native_plants_permalink_page' => array('page_manager_pages'),
  ));
}

/**
 * Revert panes default values on permalink page.
 */
function nas_master_native_plants_update_7024() {
  features_revert(array(
    'nas_native_plants_permalink_page' => array('page_manager_pages'),
  ));
}

/**
 * Adding State flag to Additional Resources and adding search by State.
 */
function nas_master_native_plants_update_7025() {
  features_revert(array(
    'nas_additional_resource_feature' => array(
      'field_base',
      'field_instance',
      'variable',
    ),
    'nas_solr_feature' => array(
      'search_api_index',
    ),
    'nas_additional_resource_near_you' => array(
      'views_view',
    ),
  ));
}
