<?php

/**
 * @file
 * Contains Engagement cards related logic.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters the Engagement Cards node form.
 */
function nas_engagement_cards_form_engagement_cards_node_form_alter(&$form, &$form_state, $form_id) {
  // Fields visibility.
  $states = array(
    'visible' => array(
      '#edit-field-engagement-card-type-und' => array('value' => 'simple_form'),
    ),
  );
  $form['field_placeholder_text']['#states'] = $states;

  // External integration.
  $conf = array();
  if (!empty($form['#node']->nas_external_integration)) {
    $conf = $form['#node']->nas_external_integration;
  }
  $form = nas_external_integration_settings_form($form, $form_state, $conf);
  $form['#group_children']['nas_external_integration'] = 'group_main_content';
  $form['nas_external_integration']['#states'] = $states;

  // Hide field with JSON config.
  $form['field_nas_external_integration']['#access'] = FALSE;
}

/**
 * Implements hook_field_attach_submit().
 */
function nas_engagement_cards_field_attach_submit($entity_type, $entity, $form, &$form_state) {
  // Save nas_external_configuration as JSON string.
  $values = drupal_array_get_nested_value($form_state['values'], $form['#parents']);
  if (!empty($values['nas_external_integration'])) {
    $entity->field_nas_external_integration[LANGUAGE_NONE][0]['value'] = drupal_json_encode($values['nas_external_integration']);
  }
}

/**
 * Implements hook_node_load().
 */
function nas_engagement_cards_node_load($nodes, $types) {
  if (!in_array('engagement_cards', $types)) {
    return;
  }

  foreach ($nodes as $node) {
    if ($node->type !== 'engagement_cards') {
      continue;
    }

    $node->nas_external_integration = array();
    if ($values = field_get_items('node', $node, 'field_nas_external_integration')) {
      $value = reset($values)['value'];
      $node->nas_external_integration = drupal_json_decode($value);
    }
  }
}

/**
 * Implements hook_forms().
 */
function nas_engagement_cards_forms($form_id, $args) {
  $forms = array();
  if (preg_match('/nas_ec_subscription_form_.*/', $form_id)) {
    if (!empty($args[0]['id']) && $form_id == 'nas_ec_subscription_form_' . $args[0]['id']) {
      $forms[$form_id] = array(
        'callback' => 'nas_engagement_cards_subscription_form',
      );
    }
  }
  return $forms;
}

/**
 * Form for mail subscription.
 */
function nas_engagement_cards_subscription_form($form, &$form_state, $conf = array()) {
  $form_state['nas_external_integration'] = $conf['nas_external_integration'];
  $form['email'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => array(t($conf['placeholder'])),
      'class' => array('mailing-list-input', 'radius'),
    ),
    '#size' => '',
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('OK'),
    '#attributes' => array(
      'class' => array('button', 'tomato', 'large'),
    ),
  );
  $form['#attributes']['class'] = array('ec-mailing-list-form');
  $form['form_id'] = $form_state['build_info']['base_form_id'] . $conf['id'];

  return $form;
}

/**
 * Custom validation callback.
 */
function nas_engagement_cards_subscription_form_validate(&$form, &$form_state) {
  // Validate email address.
  $email = strtolower(trim($form_state['values']['email']));
  $form_state['values']['email'] = $email;
  if (!$email || !valid_email_address($email)) {
    form_set_error('email', t('The e-mail address you specified is not valid.'));
    return;
  }
}

/**
 * Custom submit callback.
 */
function nas_engagement_cards_subscription_form_submit(&$form, &$form_state) {
  // External integration.
  $values = array(
    'email' => $form_state['values']['email'],
  );
  nas_external_integration_process_form_submission($values, $form_state['nas_external_integration']);

  // Redirect to the Thank you page.
  $form_state['redirect'] = variable_get('email_submission_redirect_url', 'thankyou');
}

/**
 * Implements hook_preprocess_node().
 */
function nas_engagement_cards_preprocess_node(&$variables) {
  if ($conf = _nas_engagement_cards_get_config($variables['node'])) {
    $variables['form'] = drupal_get_form('nas_ec_subscription_form_' . $conf['id'], $conf);
  }
}

/**
 * Helper function; returns EC subscription config.
 *
 * @param object $node
 *   Any node.
 *
 * @return mixed
 *   associative array of config variables - for engagement cards set up with
 * a form element;
 *   FALSE - for any other nodes.
 */
function _nas_engagement_cards_get_config($node) {
  if ($node->type !== 'engagement_cards') {
    return FALSE;
  }
  if (!$card_type_values = field_get_items('node', $node, 'field_engagement_card_type')) {
    return FALSE;
  }
  $card_type = reset($card_type_values)['value'];
  if ($card_type != 'simple_form') {
    return FALSE;
  }

  $conf = array(
    'id' => 'node_' . $node->nid,
    'placeholder' => '',
    'nas_external_integration' => $node->nas_external_integration,
  );
  if ($placeholder_values = field_get_items('node', $node, 'field_placeholder_text')) {
    $conf['placeholder'] = reset($placeholder_values)['safe_value'];
  }

  return $conf;
}
