<?php

/**
 * @file
 * i18n_node_load routines.
 */

/**
 * i18n wrapper over standard node_load().
 */
function _i18n_node_load($nid = NULL, $vid = NULL, $reset = FALSE) {
  if (!function_exists('translation_node_get_translations')) {
    return node_load($nid, $vid, $reset);
  }
  global $language;
  $all_translations = translation_node_get_translations($nid);
  if (isset($all_translations[$language->language])) {
    return node_load($all_translations[$language->language]->nid, $vid, $reset);
  }
  if (isset($all_translations[LANGUAGE_NONE])) {
    return node_load($all_translations[LANGUAGE_NONE]->nid, $vid, $reset);
  }
  return node_load($nid, $vid, $reset);
}

/**
 * Implements hook_menu_alter().
 */
function i18n_node_load_menu_alter(&$items) {
  $items['node/%node/translate']['access callback'] = 'i18n_node_load_translation_tab_access';
}

/**
 * Access callback: Checks that the user has permission to 'translate content'.
 *
 * @see _translation_tab_access()
 */
function i18n_node_load_translation_tab_access($node) {
  if (translation_supported_type($node->type) && node_access('view', $node)) {
    return user_access('translate content');
  }
  return FALSE;
}
