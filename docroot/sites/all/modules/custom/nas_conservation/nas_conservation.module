<?php

/**
 * @file
 * Code related to conservation strategy and projects.
 */


define('NAS_CONSERVATION_MENU_SECTION_VOCABULARY', 'menu_section');
define('NAS_CONSERVATION_STRATEGY_DEFAULT_MENU_SECTION_NAME', 'Conservation');
define('NAS_CONSERVATION_STRATEGY_DEFAULT_MENU_SECTION_ID', 14);

/**
 * Implements hook_entity_insert().
 */
function nas_conservation_entity_insert($entity, $entity_type) {
  if ($entity_type != 'node' || $entity->type != 'strategy') {
    return;
  }

  // Generate term for Conservation Strategy.
  $conservation_tid = NAS_CONSERVATION_STRATEGY_DEFAULT_MENU_SECTION_ID;
  $vocabulary = taxonomy_vocabulary_machine_name_load(NAS_CONSERVATION_MENU_SECTION_VOCABULARY);
  $conservation_term = taxonomy_get_term_by_name(NAS_CONSERVATION_STRATEGY_DEFAULT_MENU_SECTION_NAME, NAS_CONSERVATION_MENU_SECTION_VOCABULARY);
  if (!empty($conservation_term)) {
    $conservation_term = reset($conservation_term);
    $conservation_tid = $conservation_term->tid;
  }

  $term = new stdClass();
  $term->name = $entity->title;
  $term->vid = $vocabulary->vid;
  $term->parent = $conservation_tid;
  taxonomy_term_save($term);

  $entities[$entity->nid] =& $entity;
  if ($handler = panelizer_entity_plugin_get_handler($entity_type)) {
    $handler->hook_entity_load($entities);
  }

  // Update panel pane config with new term.
  $pid = _nas_panes_panelizer_lookup_pid('conservation_strategy_news', $entity);
  // When a node of this type is saved for the first time.
  if (empty($pid) || !is_numeric($pid)) {
    $pid = _nas_panes_save_panelizer('conservation_strategy_news', $entity);
  }
  $settings = db_select('panels_pane', 'p')
    ->fields('p', array('configuration'))
    ->condition('p.pid', $pid)
    ->execute()
    ->fetchField();

  // Add menu_item for created node.
  $settings = unserialize($settings);
  $settings[$entity->nid]['menu_item'] = $term->tid;

  db_update('panels_pane')
    ->fields(array('configuration' => serialize($settings)))
    ->condition('pid', $pid)
    ->execute();
}

/**
 * Implements hook_module_implements_alter().
 */
function nas_conservation_module_implements_alter(&$implementations, $hook) {
  // Move entity_insert to the end of scope.
  if ($hook == 'entity_insert') {
    $group = $implementations['nas_conservation'];
    unset($implementations['nas_conservation']);
    $implementations['nas_conservation'] = $group;
  }
}
