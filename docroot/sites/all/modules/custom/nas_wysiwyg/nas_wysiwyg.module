<?php

/**
 * @file
 * Provides wysiwys's plugins.
 */

define('NAS_WYSIWYG_LOGO_WELCOME_TO_ADUBON', 'wordmark-black.png');

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function nas_wysiwyg_wysiwyg_editor_settings_alter() {
  drupal_add_css(drupal_get_path('module', 'nas_wysiwyg') . '/css/nas_wysiwyg.css');
}

/**
 * Implements hook_wysiwyg_include_directory().
 */
function nas_wysiwyg_wysiwyg_include_directory($type) {
  return 'plugins';
}

/**
 * Implements hook_filter_info().
 */
function nas_wysiwyg_filter_info() {
  $filters['nas_wysiwyg_article_aside_filter'] = array(
    'title' => t('Convert NAS article aside Insert tags to markup'),
    'description' => t('This filter will convert [article_aside_insert]...[/article_aside_insert] tags into markup.'),
    'process callback' => 'nas_wysiwyg_article_aside_filter_process',
    'weight' => 2,
  );
  return $filters;
}

/**
 * Implements hook_element_info_alter().
 */
function nas_wysiwyg_element_info_alter(&$types) {
  $types['text_format']['#pre_render'][] = 'nas_wysiwyg_article_aside_pre_render_text_format';
}

/**
 * Preprocess function for entity.
 */
function nas_wysiwyg_preprocess_entity(&$vars) {
  // preprocess_bean__[bundle] doesn't work.
  if ($vars['elements']['#entity_type'] !== 'bean') {
    return;
  }
  $vars['theme_hook_suggestions'][] = 'bean__' . $vars['elements']['#bundle'];
  if ($vars['elements']['#bundle'] == 'wysiwyg_image') {
    $entity = $vars['elements']['#entity'];
    $vars['figcaption'] = '';
    $get_field_wysiwyg_image = field_get_items('bean', $entity, 'field_wysiwyg_image');
    // Check if we got audio and replace 'image' template with 'audio'.
    $type = $get_field_wysiwyg_image[0]['file']->type;
    if ($type == 'audio') {
      end($vars['theme_hook_suggestions']);
      $key = key($vars['theme_hook_suggestions']);
      $vars['theme_hook_suggestions'][$key] = 'bean__' . $type;
    }
    if (!empty($get_field_wysiwyg_image)) {
      $vars['figcaption'] = _nas_panes_format_image_attribution($get_field_wysiwyg_image[0]['file']);
    }
    $get_field_wysiwyg_width_mode = field_get_items('bean', $entity, 'field_wysiwyg_width_mode');
    $vars['width'] = $get_field_wysiwyg_width_mode[0]['value'];

    // Remove height and width to make image responsive
    if (!empty($vars['content']['field_wysiwyg_image'][0]['file']['#item']['metadata']['width'])
      || !empty($vars['content']['field_wysiwyg_image'][0]['file']['#item']['metadata']['height'])) {
      unset($vars['content']['field_wysiwyg_image'][0]['file']['#item']['metadata']['width']);
      unset($vars['content']['field_wysiwyg_image'][0]['file']['#item']['metadata']['height']);
    }
  }
  elseif ($vars['elements']['#bundle'] == 'welcome_to_audubon') {
    // Don't display Welcome to Audubon block when sidebar engagement card wasn't rendered on node.
    $vars['content'] = '';
    $nas_engagement_cards_sidebar_rendered_card = &drupal_static('nas_engagement_cards_sidebar_rendered_card');
    if (!menu_get_object('node') || (menu_get_object('node') && !empty($nas_engagement_cards_sidebar_rendered_card))) {
      $entity = $vars['elements']['#entity'];
      $vars_array_data = get_welcome_to_audubon_array_data($entity);
      $vars['content'] = theme('bean__welcome_to_audobun', $vars_array_data);
    }
  }
  elseif ($vars['elements']['#bundle'] == 'video') {
    $entity = $vars['elements']['#entity'];
    $get_alignment = field_get_items('bean', $entity, 'field_video_alignment');
    $vars['alignment'] = $get_alignment[0]['value'];
  }
  elseif ($vars['elements']['#bundle'] == 'slideshow') {
    $entity = $vars['elements']['#entity'];
    $is_stacked = field_get_items('bean', $entity, 'field_stack_images_on_each_other');
    if ($is_stacked = !empty($is_stacked[0]['value'])) {
      $vars['theme_hook_suggestions'][] = 'bean__slideshow_stacked';
    }
    // Get Title.
    $get_title = field_get_items('bean', $entity, 'field_wysiwyg_slideshow_title');
    $vars['title'] = !empty($get_title[0]['value']) ? $get_title[0]['value'] : '';
    // Get images.
    if (!$get_images = field_get_items('bean', $entity, 'field_wysiwyg_images')) {
      return;
    }

    $slides = array();
    foreach ($get_images as $key => $image) {
      $file = file_load($image['fid']);
      if (!isset($file->metadata['width'], $file->metadata['height'])) {
        $info = image_get_info($file->uri);

        if (is_array($info)) {
          $file->metadata['width'] = $info['width'];
          $file->metadata['height'] = $info['height'];
        }
      }

      if ($is_stacked) {
        $slides[$key]['image'] = nas_wysiwyg_slides_image(array(
          'style_name' => 'bean_wysiwyg_full_width',
          'path' => nas_alters_local_image_uri($file->uri),
          'width' => $file->metadata['width'],
          'height' => $file->metadata['height'],
        ));
      }

      if (empty($slides[$key]['image'])) {
      $slides[$key]['image'] = theme('image_style', array(
          'style_name' => $is_stacked ? 'bean_wysiwyg_full_width' : 'wysiwyg_slide',
          'path' => nas_alters_local_image_uri($file->uri),
          'width' => $file->metadata['width'],
          'height' => $file->metadata['height'],
        ));
      }
      $slides[$key]['caption'] = _nas_panes_format_image_attribution($file);
    }
    $vars['slides'] = $slides;
  }
}

/**
 * Preprocess images for lazy-loading.
 */
function nas_wysiwyg_slides_image($variables) {
  if (module_exists('lazyloader') && variable_get('lazyloader_enabled', LAZYLOADER_ENABLED) && isset($variables['style_name'])) {

    $attributes = (!empty($variables['attributes'])) ? $variables['attributes'] : array();
    $noscript_attributes = $attributes;

    if (_lazy_loader_enabled() || in_array($variables['style_name'], ['bean_wysiwyg_full_width'])) {

      $url = parse_url(file_create_url($variables['path']));
      $path = $url['path'];
      $attributes['data-src'] = $path;
      $attributes['src'] = $path;
      // Path to dummy placeholder image, to be replaced by actual image.
      $image_placeholder = trim(variable_get('lazyloader_placeholder', LAZYLOADER_PLACEHOLDER));
      $attributes['lazy-src'] = $image_placeholder ? base_path() . $image_placeholder : url(drupal_get_path('module', 'lazyloader') . '/image_placeholder.gif');
      $noscript_attributes['src'] = $path;

      // Integrate with Responsive Webdesign module.
      if (module_exists('rdwimages')) {
        global $_rwdimages_set;
        if ($_rwdimages_set['enabled']) {
          $attributes['class'] = array('rwdimage');
        }
      }

    }
    else {
      $attributes['src'] = file_create_url($variables['path']);
    }

    foreach (array('width', 'height', 'alt', 'title', 'style') as $key) {
      if (isset($variables[$key])) {
        $attributes[$key] = $variables[$key];
      }
      if (isset($variables[$key])) {
        $noscript_attributes[$key] = $variables[$key];
      }
    }

    $noscript = '';
    if (!empty($attributes['data-src'])) {
      $noscript = '<noscript><img' . drupal_attributes($noscript_attributes) . ' /></noscript>';
    }

    return '<img' . drupal_attributes($attributes) . ' />' . $noscript;
  }
}

function nas_wysiwyg_preprocess_colorbox_image_formatter(&$variables) {
  $item = &$variables['item'];
  if (isset($item['metadata']['height']) && !isset($item['height'])) {
    $item['height'] = $item['metadata']['height'];
  }
  if (isset($item['metadata']['width']) && !isset($item['width'])) {
    $item['width'] = $item['metadata']['width'];
  }
}

/**
 * Function to get array data variebles to block welcome_to_adubun.
 */
function get_welcome_to_audubon_array_data(&$entity) {
  global $base_url;
  // Set image to logo block welcome to audobun.
  $path_to_logo = $base_url . '/' . drupal_get_path('module', 'nas_wysiwyg') . '/image/' . NAS_WYSIWYG_LOGO_WELCOME_TO_ADUBON;
  // Get image.
  $block_image = field_get_items('bean', $entity, 'field_welcome_image');
  $image = theme('image', array('path' => url($block_image[0]['value'])));
  // Get summary.
  $get_field_summary = field_get_items('bean', $entity, 'field_summary_welcome_first');
  $summary = $get_field_summary[0]['value'];
  // Get color.
  $color = $color_style = NULL;
  $get_field_color = field_get_items('bean', $entity, 'field_background_welcome_first');
  if (!empty($get_field_color)) {
    $color = $get_field_color[0]['rgb'];
    $color_style = "color:$color";
  }
  // Get link 'Learn more'.
  $get_field_learn_more = field_get_items('bean', $entity, 'field_learn_more_welcome_first');
  if (!empty($get_field_learn_more)) {
    $link_more = l($get_field_learn_more[0]['title'], $get_field_learn_more[0]['url'], array('attributes' => array('style' => $color_style)));
  }
  // Get link in the news.
  $view_results = views_get_view_result('nas_news', 'nas_the_latest_news');
  if (!empty($view_results)) {
    $path_news = $base_url . '/news';
    $link_news = l($view_results[0]->node_title, 'node/' . $view_results[0]->nid, array('attributes' => array('style' => $color_style)));
  }
  // Get link most popular.
  $view_results = views_get_view_result('nas_most_viewed_articles', 'nas_most_viewed_articles');
  if (!empty($view_results)) {
    $path_most_popular = $base_url;
    $link_most_popular = l($view_results[0]->node_title, 'node/' . $view_results[0]->nid, array('attributes' => array('style' => $color_style)));
  }
  return array(
    'image' => $image,
    'path_to_logo' => $path_to_logo,
    'summary' => $summary,
    'link_more' => $link_more,
    'path_news' => $path_news,
    'link_news' => $link_news,
    'path_most_popular' => $path_most_popular,
    'link_most_popular' => $link_most_popular,
    'social_link_fb' => 'https://www.facebook.com/NationalAudubonSociety',
    'social_link_tw' => 'https://twitter.com/audubonsociety',
    'social_link_yotube' => 'https://www.youtube.com/user/NationalAudubon',
    'social_link_pi' => 'https://www.pinterest.com/audubonsociety/',
    'color' => $color,
  );
}

/**
 * Implements hook_theme().
 */
function nas_wysiwyg_theme() {
  return array(
    'nas_article_aside' => array(
      'variables' => array(
        'head' => '',
        'text' => '',
      ),
      'template' => 'nas-article-aside',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__wysiwyg_image' => array(
      'variables' => array(
        'head' => '',
        'text' => '',
      ),
      'template' => 'bean--wysiwyg_image',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__welcome_to_audobun' => array(
      'variables' => array(
        'image' => '',
        'path_to_logo' => '',
        'summary' => '',
        'path_more' => '',
        'link_more' => '',
        'path_news' => '',
        'link_most_popular' => '',
        'path_most_popular' => '',
        'social_link_fb' => '',
        'social_link_tw' => '',
        'social_link_yotube' => '',
        'social_link_pi' => '',
        'color' => '',
      ),
      'template' => 'bean--welcome_to_audobun',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__slideshow' => array(
      'variables' => array(
        'title' => '',
        'slides' => array(),
        'count' => array(),
      ),
      'template' => 'bean--slideshow',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__slideshow_stacked' => array(
      'variables' => array(
        'title' => '',
        'slides' => array(),
      ),
      'template' => 'bean--slideshow_stacked',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__video' => array(
      'variables' => array(
        'alignment' => '',
      ),
      'template' => 'bean--video',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
    'bean__audio' => array(
      'variables' => array(
        'alignment' => '',
      ),
      'template' => 'bean--audio',
      'path' => drupal_get_path('module', 'nas_wysiwyg') . '/theme'
    ),
  );
}

/**
 * Pre render function for text_format.
 */
function nas_wysiwyg_article_aside_pre_render_text_format($element) {
  // filter_process_format() copies properties to the expanded 'value' child
  // element.
  if (!isset($element['format'])) {
    return $element;
  }

  $field = &$element['value'];
  $tagmap = _nas_wysiwyg_article_aside_generate_tag_map($field['#value']);

  if (isset($tagmap)) {
    drupal_add_js(array('nas_wysiwyg_tagmap' => $tagmap), 'setting');
  }
  return $element;
}

/**
 * Finds all matches and run them through nas_wysiwyg_article_aside_token_to_markup().
 */
function nas_wysiwyg_article_aside_filter_process($text) {
  $text = ' ' . $text . ' ';
  $text = preg_replace_callback("/\[article_aside_insert\].*?\[\/article_aside_insert\]/s", 'nas_wysiwyg_article_aside_token_to_markup', $text);
  return $text;
}

/**
 * Convert tokens to markup.
 */
function nas_wysiwyg_article_aside_token_to_markup($match) {
  preg_match("/\[head\](.*?)\[\/head\]/s", $match[0], $head);
  preg_match("/\[text\](.*?)\[\/text\]/s", $match[0], $text);
  $text = theme('nas_article_aside', array(
    'head' => $head[1],
    'text' => $text[1],
  ));
  return $text;
}

/**
 * Tagmap generator function.
 */
function _nas_wysiwyg_article_aside_generate_tag_map($text) {
  static $tagmap = array();
  preg_match_all("/\[article_aside_insert\].*?\[\/article_aside_insert\]/s", $text, $matches, PREG_SET_ORDER);
  foreach ($matches as $match) {
    if (empty($tagmap[$match[0]])) {
      $markup = nas_wysiwyg_article_aside_token_to_markup($match);
      $tagmap[$match[0]] = $markup;
    }
  }
  return $tagmap;
}

/**
 * Implementation of hook_wysiwyg_plugin().
 */
function nas_wysiwyg_wysiwyg_plugin($editor) {
  if ($editor == 'ckeditor') {
    return array(
      'inlinevideo' => array(
        'title' => 'Inline Video',
        'path' => drupal_get_path('module', 'nas_wysiwyg') . '/plugins/inlinevideo',
        'filename' => 'plugin.js',
        'buttons' => array(
          'inlinevideo_button' => t('Add inline video'),
        ),
        'load' => TRUE,
      ),
    );
  }
}

/**
 * Implementation of hook_preprocess_field().
 */
function nas_wysiwyg_preprocess_field(&$variables) {
  if (!empty($variables['element']['#field_type']) && ($variables['element']['#field_type'] == 'text_with_summary' || $variables['element']['#field_type'] =='text_long')) {
    $variables['items']['0']['#markup'] = preg_replace('/src="([^"]*)" lazy-/', '', $variables['items']['0']['#markup']);
  }
}
