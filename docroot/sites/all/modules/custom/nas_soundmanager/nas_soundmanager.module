<?php
/**
 * @file
 * Provide a field formatter view for Soundmanager2 module.
 */

/**
 * Implements hook_field_formatter_info_alter().
 *
 * Take ownership of the sound manager 2 inline player formatter.
 */
function nas_soundmanager_field_formatter_info_alter(&$info) {
  if (isset($info['soundmanager2_inline_player'])) {
    $info['soundmanager2_inline_player']['module'] = 'nas_soundmanager';
  }
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function nas_soundmanager_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $element = soundmanager2_field_formatter_settings_form($field, $instance, $view_mode, $form, $form_state);

  $display = $instance['display'][$view_mode];

  switch ($display['type']) {
    case 'soundmanager2_inline_player':
      // Add an additional file title option.
      $options = _link_text_options();
      $options['file_description'] = t('NAS Audio Description');
      $element['text']['#options'] = $options;
      break;

  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function nas_soundmanager_field_formatter_settings_summary($field, $instance, $view_mode) {
  return soundmanager2_field_formatter_settings_summary($field, $instance, $view_mode);
}

/**
 * Implements hook_field_formatter_view().
 *
 * This gets set in hook_field_formatter_info_alter().
 */
function nas_soundmanager_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  $tracks = array();
  foreach ($items as $delta => $item) {
    // Prepend a random parameter to the URL in case this track appears.
    // multiple times in the same page.
    $attributes = array();
    if ($settings['audio_type'] != 'default') {
      $attributes['type'] = $settings['audio_type'];
    }
    $url_options = array('query' => array('uuid' => uniqid()), 'attributes' => $attributes);
    if (isset($item['file'])) {
      // A Media file type.
      $file = $item['file'];
      // Get text to use in link.
      $text = $file->filename;
      if (array_key_exists('text', $settings)) {
        if ($settings['text'] == 'description' && !empty($item['description'])) {
          $text = $file->description;
        }
        elseif ($settings['text'] == 'title' && !empty($entity->title)) {
          $text = $entity->title;
        }
        elseif ($settings['text'] == 'file_description') {
          $get_field_audio_description = field_get_items('file', $item['file'], 'field_audio_description');
          $field_audio_description = field_view_value('file', $item['file'], 'field_audio_description', $get_field_audio_description[0]);
          $text = $field_audio_description['#markup'];
        }
      }
      // Add our small audio icon markup.
      $icon_markup = '<i class="icon-sound-full"></i>';
      $text = $icon_markup . ' ' . $text;
      // Enable html output.
      $url_options['html'] = TRUE;
      $tracks[$delta] = l($text, file_create_url($file->uri), $url_options);
    }
    elseif (isset($item['url'])) {
      // A Link file type.
      $file = $item['url'];
      // Get text to use in link.
      $text = $item['title'];
      if (array_key_exists('text', $settings)) {
        if ($settings['text'] == 'title' && !empty($entity->title)) {
          $text = $entity->title;
        }
      }
      $tracks[$delta] = l($text, file_create_url($item['url']), $url_options);
    }
    else {
      // Get text to use in link.
      $text = $item['filename'];
      if (array_key_exists('text', $settings)) {
        if ($settings['text'] == 'description' && !empty($item['description'])) {
          $text = $item['description'];
        }
        elseif ($settings['text'] == 'title' && !empty($entity->title)) {
          $text = $entity->title;
        }
      }

      $tracks[$delta] = l($text, file_create_url($item['uri']), $url_options);
    }
    switch ($display['type']) {
      case 'soundmanager2_page_player':
        $element[0] = array(
          '#theme' => 'soundmanager2_page_player',
          '#tracks' => $tracks,
          '#attached' => array(
            'library' => array(
              array('soundmanager2', variable_get('sm2_debug_mode', FALSE) ? 'soundmanager2_debug' : 'soundmanager2'),
              array('soundmanager2', 'soundmanager2_page_player'),
            ),
          ),
        );
        drupal_add_js(array(
          'soundmanager2' => array(
          'stream' => $settings['stream'],
        )), 'setting');
        // Add in the config files.
        theme('soundmanager2_config');
        if ($settings['pause'] == 'stop') {
          theme('soundmanager2_page_player_pause');
        }

        break;

      case 'soundmanager2_ui360':
        $element[0] = array(
          '#theme' => 'soundmanager2_ui360',
          '#tracks' => $tracks,
          '#settings' => $settings,
          '#attached' => array(
            'library' => array(
              array('soundmanager2', variable_get('sm2_debug_mode', FALSE) ? 'soundmanager2_debug' : 'soundmanager2'),
              array('soundmanager2', 'soundmanager2_ui360'),
            ),
          ),
        );
        // Add relevant JS settings.
        drupal_add_js(array(
          'soundmanager2' => array(
          'visualization' => $settings['visualization'],
          'waveform' => $settings['waveform'],
          'eq' => $settings['eq'],
          'amplifier' => $settings['amplifier'],
          'stream' => $settings['stream'],
        )), 'setting');

        // Add CSS.
        drupal_add_css('.ui360-vis, .ui360-vis .sm2-360ui, .sm2-inline-list .ui360-vis { width: ' . $settings['diameter'] . 'px; height: ' . $settings['diameter'] . 'px; } .ui360-vis .sm2-timing { line-height: ' . $settings['diameter'] . 'px; } .sm2-inline-list .ui360, .sm2-inline-block .ui360 { margin-bottom: 0; }', 'inline');
        drupal_add_css('#sm2-container { height: 0; overflow: hidden; visibility: hidden; }');

        // Add in the config files.
        theme('soundmanager2_config');
        theme('soundmanager2_config_ui360');
        if ($settings['pause'] == 'stop') {
          theme('soundmanager2_config_ui360_pause');
        }

        break;

      case 'soundmanager2_inline_player':
        $element[0] = array(
          '#theme' => 'soundmanager2_inline_player',
          '#tracks' => $tracks,
          '#attached' => array(
            'library' => array(
              array('soundmanager2', variable_get('sm2_debug_mode', FALSE) ? 'soundmanager2_debug' : 'soundmanager2'),
              array('soundmanager2', 'soundmanager2_inline_player'),
            ),
          ),
        );

        drupal_add_js(array(
          'soundmanager2' => array(
          'stream' => $settings['stream'],
        )), 'setting');

        // Add in the config files.
        theme('soundmanager2_config');
        if ($settings['pause'] == 'stop') {
          theme('soundmanager2_inline_player_pause');
        }

        break;
    }
  }

  return $element;
}
