<?php
/**
 * @file
 * Code for the NAS Park feature feature.
 */

include_once 'nas_park_feature.features.inc';

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function nas_park_feature_form_park_node_form_alter(&$form, &$form_state, $form_id) {
  $states = $form['field_state'][LANGUAGE_NONE]['#options'];
  unset($states['_none']);
  foreach ($states as $tid => $title) {
    $term = taxonomy_term_load($tid);
    if($term->field_country_us_ca[LANGUAGE_NONE][0]['value'] != 'us') {
      unset($form['field_state'][LANGUAGE_NONE]['#options'][$tid]);
    }
  }

  // Draw relations tables.
  if(!empty($form['#node']->nid)) {
    $nodes = nas_park_feature_get_parks_to_bird_relations($form['#node']->nid);
    $summer = array();
    $winter = array();
    $header = array('Link', 'Trend');
    foreach ($nodes as $node) {
      $title = explode('|', $node->title);
      $row = array(
        l($title[1], 'node/' . $node->field_bird_reference[LANGUAGE_NONE][0]['target_id']),
        $node->field_park_trend[LANGUAGE_NONE][0]['value'],
      );
      if (strtolower($node->field_park_season[LANGUAGE_NONE][0]['value']) == 'summer') {
        $summer[] = $row;
      }
      else {
        $winter[] = $row;
      }
    }
    $seasons = array('s' => 'summer', 'w' => 'winter');
    foreach ($seasons as $key => $season) {
      $table_relation = 'table_relation_' . $key;
      $form[$table_relation] = array(
        '#type' => 'fieldset',
        '#title' => t('Relations'),
        '#weight' => 30,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );
      $form[$table_relation]['table'] = array(
        '#type' => 'table',
        '#rows' => $$season,
        '#header' => $header,
      );
      $form['#groups']['group_seasons_' . $season]->childer[] = $table_relation;
      $form['#group_children'][$table_relation] = 'group_seasons_' . $season;
    }
  }
}

/**
 * Helper function to load images.
 */
function nas_park_feature_get_image($name, $return_fid = FALSE) {
  $files = file_load_multiple(array(), array('filename' => $name));
  $file = reset($files);
  $image_url = variable_get('nas_park_feature_assets', 'sites/all/themes/custom/nas/img/climate-landing') . '/' . $name;
  if (empty($file)) {
    if (file_exists($image_url)) {
      $file = file_save_data(file_get_contents($image_url), 'public://' . basename($image_url));
      $file->status = 1;
      return $return_fid ? $file->fid : $file;
    }
    return FALSE;
  }
  else {
    if (!file_exists($file->uri)) {
      if (file_exists($image_url)) {
        file_put_contents('public://' . basename($image_url), file_get_contents($image_url));
        return $file;
      }
    }
    return $return_fid ? $file->fid : $file;
  }
}

/**
 * Helper function to get parks -> birds relations.
 */
function nas_park_feature_get_parks_to_bird_relations($park_node_id) {
  $relations = db_select('field_data_field_park_reference', 'pr')
    ->fields('pr', array('entity_id'))
    ->condition('pr.field_park_reference_target_id', $park_node_id, '=')
    ->execute()
    ->fetchAll();
  $nodes = array();
  if(!empty($relations)){
    foreach ($relations as $relation) {
      $nodes[] = node_load($relation->entity_id);
    }
  }
  return $nodes;
}

/**
 * Implements hook_menu().
 */
function nas_park_feature_menu() {
  $items = [];

  $items['admin/config/content/park-global-settings'] = [
    'title' => 'Park Global Settings',
    'description' => 'A form to set global setting s for park.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['nas_park_feature_form'],
    'access callback' => TRUE,
  ];

  return $items;
}

/**
 * Implements hook_form().
 */
function nas_park_feature_form($form, &$form_state) {

  $form['field_birds_s_species_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Number of Current Species description summer',
    '#default_value' => variable_get('field_birds_s_species_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_birds_s_extirpations_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Potential Extirpations description summer',
    '#default_value' => variable_get('field_birds_s_extirpations_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_birds_s_colonizations_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Potential Colonizations description summer',
    '#default_value' => variable_get('field_birds_s_colonizations_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_birds_w_species_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Number of Current Species description winter',
    '#default_value' => variable_get('field_birds_w_species_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_birds_w_extirpations_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Potential Extirpations description winter',
    '#default_value' => variable_get('field_birds_w_extirpations_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_birds_w_colonizations_desc_global'] = [
    '#type' => 'textarea',
    '#title' => 'Potential Colonizations description winter',
    '#default_value' => variable_get('field_birds_w_colonizations_desc_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['field_park_description_secondary_global'] = [
    '#type' => 'textarea',
    '#title' => 'Park description secondary',
    '#default_value' => variable_get('field_park_description_secondary_global'),
    '#cols' => 60,
    '#rows' => 5,
  ];

  $form['submit_button'] = [
    '#type' => 'submit',
    '#value' => t('Save'),
  ];

  return $form;
}

/**
 * Implements hook_form_submit().
 */
function nas_park_feature_form_submit($form, &$form_state) {
  $fields = [
    'field_birds_s_species_desc_global',
    'field_birds_s_extirpations_desc_global',
    'field_birds_s_colonizations_desc_global',
    'field_birds_w_species_desc_global',
    'field_birds_w_extirpations_desc_global',
    'field_birds_w_colonizations_desc_global',
    'field_park_description_secondary_global',
  ];
  foreach ($fields as $field) {
    variable_set($field, $form_state['values'][$field]);
  }
  drupal_set_message("Values successfully saved");
}
